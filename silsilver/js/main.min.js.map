{"version":3,"sources":["accordeon.js","dinam-adap.js","main-slider.js","nav.js","reviews.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACflxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// // accordeon\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const accordeons = document.querySelectorAll(\".accordeon__item\");\n\n//   accordeons.forEach((el) => {\n//     el.addEventListener(\"click\", (e) => {\n//       const self = e.currentTarget;\n//       const title = self.querySelector(\".accordeon__name\");\n//       const content = self.querySelector(\".accordeon__decription\");\n\n//       self.classList.toggle(\"active\");\n//     });\n//   });\n// });\n// // ----- END\n","// // Dynamic Adapt v.1\n// // HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\n// // e.x. data-da=\".item,992,2\"\n// // Andrikanych Yevhen 2020\n// // https://www.youtube.com/c/freelancerlifestyle\n\n// \"use strict\";\n\n// function DynamicAdapt(type) {\n//   this.type = type;\n// }\n\n// DynamicAdapt.prototype.init = function () {\n//   const _this = this;\n//   // массив объектов\n//   this.оbjects = [];\n//   this.daClassname = \"_dynamic_adapt_\";\n//   // массив DOM-элементов\n//   this.nodes = document.querySelectorAll(\"[data-da]\");\n\n//   // наполнение оbjects объктами\n//   for (let i = 0; i < this.nodes.length; i++) {\n//     const node = this.nodes[i];\n//     const data = node.dataset.da.trim();\n//     const dataArray = data.split(\",\");\n//     const оbject = {};\n//     оbject.element = node;\n//     оbject.parent = node.parentNode;\n//     оbject.destination = document.querySelector(dataArray[0].trim());\n//     оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\n//     оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\n//     оbject.index = this.indexInParent(оbject.parent, оbject.element);\n//     this.оbjects.push(оbject);\n//   }\n\n//   this.arraySort(this.оbjects);\n\n//   // массив уникальных медиа-запросов\n//   this.mediaQueries = Array.prototype.map.call(\n//     this.оbjects,\n//     function (item) {\n//       return (\n//         \"(\" +\n//         this.type +\n//         \"-width: \" +\n//         item.breakpoint +\n//         \"px),\" +\n//         item.breakpoint\n//       );\n//     },\n//     this\n//   );\n//   this.mediaQueries = Array.prototype.filter.call(\n//     this.mediaQueries,\n//     function (item, index, self) {\n//       return Array.prototype.indexOf.call(self, item) === index;\n//     }\n//   );\n\n//   // навешивание слушателя на медиа-запрос\n//   // и вызов обработчика при первом запуске\n//   for (let i = 0; i < this.mediaQueries.length; i++) {\n//     const media = this.mediaQueries[i];\n//     const mediaSplit = String.prototype.split.call(media, \",\");\n//     const matchMedia = window.matchMedia(mediaSplit[0]);\n//     const mediaBreakpoint = mediaSplit[1];\n\n//     // массив объектов с подходящим брейкпоинтом\n//     const оbjectsFilter = Array.prototype.filter.call(\n//       this.оbjects,\n//       function (item) {\n//         return item.breakpoint === mediaBreakpoint;\n//       }\n//     );\n//     matchMedia.addListener(function () {\n//       _this.mediaHandler(matchMedia, оbjectsFilter);\n//     });\n//     this.mediaHandler(matchMedia, оbjectsFilter);\n//   }\n// };\n\n// DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\n//   if (matchMedia.matches) {\n//     for (let i = 0; i < оbjects.length; i++) {\n//       const оbject = оbjects[i];\n//       оbject.index = this.indexInParent(оbject.parent, оbject.element);\n//       this.moveTo(оbject.place, оbject.element, оbject.destination);\n//     }\n//   } else {\n//     for (let i = 0; i < оbjects.length; i++) {\n//       const оbject = оbjects[i];\n//       if (оbject.element.classList.contains(this.daClassname)) {\n//         this.moveBack(оbject.parent, оbject.element, оbject.index);\n//       }\n//     }\n//   }\n// };\n\n// // Функция перемещения\n// DynamicAdapt.prototype.moveTo = function (place, element, destination) {\n//   element.classList.add(this.daClassname);\n//   if (place === \"last\" || place >= destination.children.length) {\n//     destination.insertAdjacentElement(\"beforeend\", element);\n//     return;\n//   }\n//   if (place === \"first\") {\n//     destination.insertAdjacentElement(\"afterbegin\", element);\n//     return;\n//   }\n//   destination.children[place].insertAdjacentElement(\"beforebegin\", element);\n// };\n\n// // Функция возврата\n// DynamicAdapt.prototype.moveBack = function (parent, element, index) {\n//   element.classList.remove(this.daClassname);\n//   if (parent.children[index] !== undefined) {\n//     parent.children[index].insertAdjacentElement(\"beforebegin\", element);\n//   } else {\n//     parent.insertAdjacentElement(\"beforeend\", element);\n//   }\n// };\n\n// // Функция получения индекса внутри родителя\n// DynamicAdapt.prototype.indexInParent = function (parent, element) {\n//   const array = Array.prototype.slice.call(parent.children);\n//   return Array.prototype.indexOf.call(array, element);\n// };\n\n// // Функция сортировки массива по breakpoint и place\n// // по возрастанию для this.type = min\n// // по убыванию для this.type = max\n// DynamicAdapt.prototype.arraySort = function (arr) {\n//   if (this.type === \"min\") {\n//     Array.prototype.sort.call(arr, function (a, b) {\n//       if (a.breakpoint === b.breakpoint) {\n//         if (a.place === b.place) {\n//           return 0;\n//         }\n\n//         if (a.place === \"first\" || b.place === \"last\") {\n//           return -1;\n//         }\n\n//         if (a.place === \"last\" || b.place === \"first\") {\n//           return 1;\n//         }\n\n//         return a.place - b.place;\n//       }\n\n//       return a.breakpoint - b.breakpoint;\n//     });\n//   } else {\n//     Array.prototype.sort.call(arr, function (a, b) {\n//       if (a.breakpoint === b.breakpoint) {\n//         if (a.place === b.place) {\n//           return 0;\n//         }\n\n//         if (a.place === \"first\" || b.place === \"last\") {\n//           return 1;\n//         }\n\n//         if (a.place === \"last\" || b.place === \"first\") {\n//           return -1;\n//         }\n\n//         return b.place - a.place;\n//       }\n\n//       return b.breakpoint - a.breakpoint;\n//     });\n//     return;\n//   }\n// };\n\n// const da = new DynamicAdapt(\"max\");\n// da.init();\n","// слайдер на главной\nconst headerSlider = new Swiper(\".first-slider\", {\n  loop: true,\n  autoplay: {\n    //пауза между прокруткой\n    delay: 3000,\n    //закончить на последнем слайде\n    // stopOnLastSlide: false,\n    //отключить после ручного переключения\n    // disableOnInteraction: false,\n  },\n  //скорость переключения слайдов\n  speed: 800,\n  // навигация по стрелкам\n  // navigation: {\n  //   nextEl: \".first-slider__btn-next\",\n  //   prevEl: \".first-slider__btn-prev\",\n  //   // disabledClass: \"stories-button__unactive\",\n  //   clickable: true,\n  //   // для ппрвильного направления\n  // },\n  // буллеты\n  // pagination: {\n  //   el: \".swiper-pagination\",\n  //   type: \"bullets\",\n  //   clickable: true,\n  //   dynamicBullets: true,\n  // },\n  //эффект перехода слайда (только если показ по 1-му слайду)\n  // effect: \"fade\",\n  // fadeEffect: {\n  //   crossFade: true,\n  // },\n  // показ кол-ва слайдов (работает, когда откл effect: \"fade\")\n  slidesPerView: 3.6,\n  // расстояние между слайдами\n  spaceBetween: 30,\n  //отложенная загрузка:\n  //отключаем презагрузку картинок\n  preloadImages: false,\n  lazy: {\n    loadOnTransitionStart: false,\n    loadPrevNext: false,\n  },\n  // переключение при клике на слайд\n  slideToClickedSlide: true,\n  // отключение прокрутки при наведении мыши\n  on: {\n    init() {\n      this.el.addEventListener(\"mouseenter\", () => {\n        this.autoplay.stop();\n      });\n\n      this.el.addEventListener(\"mouseleave\", () => {\n        this.autoplay.start();\n      });\n    },\n  },\n  //\n});\n//----- END\n","// мобильное меню\r\n\r\n//выпадающее меню для мобильных устройств\r\ndocument.addEventListener(\"click\", documentActions);\r\n\r\nfunction documentActions(e) {\r\n  const targetElement = e.target;\r\n  if (window.innerWidth > 900) {\r\n    if (targetElement.classList.contains(\"menu__arrow\")) {\r\n      targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n    }\r\n    if (\r\n      !targetElement.closest(\".menu__item\") &&\r\n      document.querySelectorAll(\".menu__item._hover\").length > 0\r\n    ) {\r\n      // console.log(\"ehhh\");\r\n      // _removeClasses(document.querySelectorAll(\".menu__item._hover\"), \"_hover\");\r\n    }\r\n  }\r\n}\r\n\r\n// проверка, является ли уствройство мобильным\r\nconst isMobile = {\r\n  Android: function () {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function () {\r\n    return navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  iOS: function () {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function () {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function () {\r\n    return navigator.userAgent.match(/IEMobile/i);\r\n  },\r\n  any: function () {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.iOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  },\r\n};\r\n\r\nif (isMobile.any()) {\r\n  // document.querySelector('html').classList.add('_touch');\r\n  document.body.classList.add(\"_touch\");\r\n}\r\n\r\n// меню бургер\r\nconst iconMenu = document.querySelector(\".menu__icon\");\r\nconst menuBody = document.querySelector(\".menu__body\");\r\nconst menuLink = document.querySelector(\".menu__item\");\r\nif (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function (e) {\r\n    document.body.classList.toggle(\"_lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n// закрытие при клике\r\nmenuLink.addEventListener(\"click\", function (e) {\r\n  console.log(\"yes\");\r\n  document.body.classList.remove(\"_lock\");\r\n  iconMenu.classList.remove(\"_active\");\r\n  menuBody.classList.remove(\"_active\");\r\n});\r\n","// // слайдер отзывов\nlet reviewsSlider = new Swiper(\".reviews__sliders\", {\n  // loop: true,\n  // autoplay: {\n  //   delay: 3000,\n  // },\n  // speed: 800,\n  // direction: \"vertical\",\n  //\n  // navigation: {\n  //   nextEl: \".reviews-button--right\",\n  //   prevEl: \".reviews-button--left\",\n  //   clickable: true,\n  // },\n  // pagination: {\n  //   el: \".swiper-pagination\",\n  //   type: \"bullets\",\n  //   clickable: true,\n  // },\n});\n//----- END\n"]}